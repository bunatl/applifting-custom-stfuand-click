{"version":3,"sources":["components/Header.tsx","actions/index.ts","components/content/Clicks.tsx","components/content/TotalClicks.tsx","components/content/Ribbon.tsx","components/content/Leaderboard.tsx","components/content/Motivation.tsx","components/Footer.tsx","reducers/clicks.ts","reducers/team.ts","reducers/updateLeaderboard.ts","reducers/index.ts","App.tsx","index.tsx"],"names":["Quote","className","SharingInfo","slug","useParams","onClick","textToCopy","window","location","hostname","navigator","clipboard","writeText","then","alert","console","error","setTeamName","x","type","payload","axios","require","Clicks","useState","teamNameInput","setTeamNameInput","dispatch","useDispatch","placeholder","value","onChange","e","target","to","MainClickingButton","teamName","useSelector","state","teamReducer","click","a","method","url","header","data","team","res","clicks","log","TotalClicks","yourClickCount","clicksReducer","clickCounter","teamCountCounter","teamClickCount","Ribbon","Leaderboard","loading","setLoading","leaderboard","setLeaderboard","updateLeaderboard","updateReducer","update","useEffect","timer","setTimeout","get","response","clearTimeout","fetchLeaderboard","color","style","background","map","leaderboardEntry","i","key","Motivation","Footer","textDecoration","href","rel","initCounter","counterReducer","action","initTeam","initUpdate","updateLeaderboardReducer","combinedReducer","combineReducers","store","createStore","combinedReducers","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e47c473.chunk.js","sourcesContent":["import React from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { IPathParams } from '../types/componentTypes'\n\nexport function Quote() {\n    return (\n        <div className=\"quote\">\n            <div className=\"text\">\"It's really simple,  you just need to click as fast as you can\"</div>\n            <div className=\"author\">- anonymous</div>\n        </div>\n    );\n}\n\nexport function SharingInfo() {\n    // URL params in react router: https://reactrouter.com/web/example/url-params\n    const { slug } = useParams<IPathParams>();\n\n    const addToClipboard = () => {\n        // https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/Interact_with_the_clipboard\n        const textToCopy = `${window.location.hostname}/${slug}`;\n        navigator.clipboard.writeText(textToCopy).then(function () {\n            alert(\"Text has been copied!\")\n        }, function () {\n            console.error(\"An error has occured. Please copy text again.\")\n        });\n    }\n\n    return (\n        <div className=\"share\">\n            <div>Clicking for team <span>{slug}</span></div>\n            <div>Too lazy to click? Let your pals click for you: <div onClick={addToClipboard}>{`${window.location.hostname}/${slug}`}</div></div>\n        </div>\n    );\n}\n\n","import {\n    UpdateLeaderboardActions,\n    ClickTeamActions,\n    ClickCounterActions\n} from '../types/reducerTypes'\n\nexport const incrementClicks = (): ClickCounterActions => ({ type: 'INCREMENT' });\n\nexport const setTeamName = (x: string): ClickTeamActions => ({ type: 'SETTEAMNAME', payload: x });\nexport const setTeamClicksCount = (x: number): ClickTeamActions => ({ type: 'SETTEAMCLICKS', payload: x });\n\nexport const updateLeaderboard = (): UpdateLeaderboardActions => ({ type: 'UPDATE' });","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setTeamName } from '../../actions'\nimport { useParams } from \"react-router-dom\";\nimport { IPathParams } from '../../types/componentTypes'\nimport {\n    updateLeaderboard,\n    incrementClicks,\n    setTeamClicksCount\n} from '../../actions';\n\nconst axios = require('axios');\n\nexport function Clicks() {\n    const [ teamNameInput, setTeamNameInput ] = useState<string>('');\n    const dispatch = useDispatch();\n\n    return (\n        <div className=\"header\">\n            <div className=\"team\">\n                <div className=\"inputLabelDiv\">Enter your team name:</div>\n                <div className=\"inputDiv\">\n                    <input\n                        placeholder=\"Your mom\"\n                        value={teamNameInput}\n                        onChange={e => setTeamNameInput(e.target.value)}\n                    ></input>\n                </div>\n            </div>\n            <Link\n                to={`/${teamNameInput}`}\n                className=\"startClickingButton\"\n                onClick={() => dispatch(setTeamName(teamNameInput))}>\n                <button>Start clicking</button>\n            </Link>\n        </div>\n    );\n}\n\nexport function MainClickingButton() {\n    const dispatch = useDispatch();\n    const { slug } = useParams<IPathParams>();\n\n    let teamName = useSelector<any>(state => state.teamReducer.teamName);\n    // if user go straight to url, team name needs to be set here\n    if (teamName === '') {\n        teamName = slug;\n        dispatch(setTeamName(slug));\n    }\n\n    const click = async () => {\n        try {\n            const res = await axios({\n                method: 'POST',\n                url: `/api/click`,\n                header: {\n                    type: 'application/json'\n                },\n                data: {\n                    team: teamName,\n                }\n            });\n\n            // get total count for team clicks\n            dispatch(incrementClicks());\n            dispatch(setTeamClicksCount(res.data.data.clicks));\n\n            // update leadership board\n            dispatch(updateLeaderboard());\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    return (\n        <div className=\"mainClikignButton\">\n            <button onClick={click}>Click Meee!</button>\n        </div>\n    );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux'\n\nfunction TotalClicks() {\n    const yourClickCount = useSelector<any>(state => state.clicksReducer.clickCounter);\n    const teamCountCounter = useSelector<any>(state => state.teamReducer.teamClickCount);\n\n    return (\n        <div className=\"clicksScore\">\n            <div>\n                <div>Your clicks:</div>\n                <div className=\"clicksCount\">{yourClickCount} </div>\n            </div>\n            <div>\n                <div>Team clicks:</div>\n                <div className=\"clicksCount\">{teamCountCounter} </div>\n            </div>\n        </div>\n    );\n}\n\nexport default TotalClicks;\n","import React from 'react';\n\nfunction Ribbon() {\n    return (\n        // taken from: https://css-tricks.com/snippets/css/ribbon/\n        // all credits to: Chris Coyier\n        <div className=\"non-semantic-protector\">\n            <div className=\"ribbon\">\n                <strong className=\"ribbon-content\">Top 10 clickers</strong>\n            </div>\n        </div>\n    );\n}\n\nexport default Ribbon;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux'\nimport ReactLoading from 'react-loading';\nimport Ribbon from './Ribbon'\nimport { ILeaderboardEntry } from '../../types/componentTypes'\nconst axios = require('axios');\n\nfunction Leaderboard() {\n    const [ loading, setLoading ] = useState<boolean>(false);\n    const [ leaderboard, setLeaderboard ] = useState<ILeaderboardEntry[]>([]);\n\n    const teamName = useSelector<any>(state => state.teamReducer.teamName);\n    const updateLeaderboard = useSelector<any>(state => state.updateReducer.update);\n\n    useEffect(() => {\n        const fetchLeaderboard = async () => {\n            // add delay for spinner popup (prevents spinner flash)\n            // as suggested: https://stackoverflow.com/questions/51602428/react-throttle-debounce-spinner-loading-message-not-show-if-request-is-fas\n            const timer = setTimeout(() => setLoading(true), 750);\n\n            try {\n                const res = await axios.get(`/api/leaderboard`);\n                setLeaderboard(res.data.response);\n            } catch (err) {\n                console.error(err);\n            }\n            clearTimeout(timer);\n            setLoading(false);\n        }\n        fetchLeaderboard();\n    }, [ updateLeaderboard ]);\n\n\n    return (\n        <div className=\"leaderboard\">\n            <Ribbon />\n            {loading\n                ? <ReactLoading\n                    type={\"spinningBubbles\"}\n                    color={\"cornflowerblue\"}\n                    className=\"spinner\"\n                />\n                : <table className=\"leaderboardTable\">\n                    <thead>\n                        <tr style={{ background: \"#E8E8E8\" }}>\n                            <th className=\"colNumber\">#</th>\n                            <th className=\"colTeam\">Team</th>\n                            <th className=\"colClicks\">Clicks</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {leaderboard.map((leaderboardEntry, i) => (\n                            <tr key={i} className={(leaderboardEntry.team === teamName) ? 'currentTeamRow' : ''}>\n                                <td className=\"colNumber\">{i + 1}</td>\n                                <td className=\"colTeam\">{leaderboardEntry.team}</td>\n                                <td className=\"colClicks\">{leaderboardEntry.clicks}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            }\n        </div>\n    );\n}\n\nexport default Leaderboard;\n","import React from 'react';\n\nfunction Motivation() {\n    return (\n        <div className=\"motivation\">Do you want to be the best? STFU and click more!</div>\n    );\n}\n\nexport default Motivation;\n","import React from 'react';\n\nfunction Footer() {\n    return (\n        <footer>\n            If you don't like this page, it's <span style={{ textDecoration: \"line-through\" }}><a href=\"https://www.applifting.cz/\" rel=\"noreferrer nofollow\">Applifting</a></span> or rather <a href=\"https://github.com/bunatl\" rel=\"noreferrer nofollow\">Lukas</a> fault\n        </footer>\n    );\n}\n\nexport default Footer;\n","import { ClickCounterActions, ICounterState } from '../types/reducerTypes'\n\nconst initCounter: ICounterState = {\n    clickCounter: 0\n}\n\nconst counterReducer = (state: ICounterState = initCounter, action: ClickCounterActions) => {\n    switch (action.type) {\n        case 'INCREMENT':\n            return {\n                clickCounter: state.clickCounter + 1\n            };\n        default:\n            return state;\n    }\n}\n\nexport default counterReducer;","import { ClickTeamActions, ITeamState } from '../types/reducerTypes'\n\nconst initTeam: ITeamState = {\n    teamName: '',\n    teamClickCount: 0\n}\n\nconst teamReducer = (state: ITeamState = initTeam, action: ClickTeamActions) => {\n    switch (action.type) {\n        case 'SETTEAMNAME':\n            return {\n                ...state,\n                teamName: action.payload\n            };\n        case 'SETTEAMCLICKS':\n            return {\n                ...state,\n                teamClickCount: action.payload\n            };\n        default:\n            return state;\n    }\n}\n\nexport default teamReducer;","import { UpdateLeaderboardActions, IUpdateState } from '../types/reducerTypes'\n\nconst initUpdate: IUpdateState = {\n    update: false\n}\n\nconst updateLeaderboardReducer = (state: IUpdateState = initUpdate, action: UpdateLeaderboardActions) => {\n    switch (action.type) {\n        case 'UPDATE':\n            return {\n                update: !state.update\n            };\n        default:\n            return state;\n    }\n}\n\nexport default updateLeaderboardReducer;","import { combineReducers } from 'redux'\n\n// import all reducers\nimport clicksReducer from './clicks';\nimport teamReducer from './team';\nimport updateLeaderboardReducer from './updateLeaderboard'\n\nconst combinedReducer = combineReducers({\n    clicksReducer,\n    teamReducer,\n    updateReducer: updateLeaderboardReducer\n})\n\nexport default combinedReducer;","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux'\n\n// import styles\nimport './styles/styles.scss'\n\n// components import\nimport { Quote, SharingInfo } from './components/Header'\nimport { Clicks, MainClickingButton } from './components/content/Clicks'\nimport TotalClicks from './components/content/TotalClicks'\nimport Leaderboard from './components/content/Leaderboard'\nimport Motivation from './components/content/Motivation'\nimport Footer from './components/Footer'\n\n// import root reducer\nimport combinedReducers from './reducers'\n\nconst store = createStore(combinedReducers);\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <header>\n          <div className=\"title\"><h1>stfuandclick.com</h1></div>\n          <Route path=\"/\" exact component={Quote} />\n          <Route path=\"/:slug\" component={SharingInfo} />\n        </header>\n        <main>\n          <Route path=\"/\" exact component={Clicks} />\n          <Route path=\"/:slug\" component={MainClickingButton} />\n          <Route path=\"/:slug\" component={TotalClicks} />\n          <Route path=\"/\" component={Leaderboard} />\n          <Route path=\"/\" component={Motivation} />\n        </main>\n        <Route path=\"/\" component={Footer} />\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}